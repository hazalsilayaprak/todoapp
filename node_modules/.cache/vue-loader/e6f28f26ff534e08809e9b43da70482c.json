{"remainingRequest":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue?vue&type=style&index=0&id=0acc1ee4&lang=css&scoped=true&","dependencies":[{"path":"/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue","mtime":1560790576752},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.container {\n    width: 100%;\n    max-width: 800px;\n    min-height: 100vh;\n}\nform {\n    margin-left: 17px;\n}\n.redirect {\n    /* margin: 0 auto; */\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 55%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%)\n}\n.btn {\n    display: block;\n    margin: auto;\n    margin-top: 15px;\n}\nimg {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n}\n",{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tasks.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div class=\"container\">\n    <div v-if=\"showTasks\">\n        <h1>Tasks</h1>\n        <div class=\"row w-100\">\n            <div class=\"col\">\n                <h4>Today</h4>\n                <div v-for=\"task in tasks\">\n                    <div @click.prevent=\"done(task.id)\">\n                        <task :data=\"task\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row w-100\">\n            <form action=\"/action_page.php\">\n                <div class=\"form-group\">\n                    <label for=\"todo\">ToDo</label>\n                    <input type=\"text\" class=\"form-control\" id=\"todo\" v-model=\"message\">\n                    <textarea class=\"form-control\" v-model=\"description\"></textarea>\n                </div>\n                <button @click.prevent=\"submitted\" type=\"submit\" class=\"btn btn-primary\">Submit</button>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"showAlert\">\n                    Girdi boş olamaz!\n                </div>\n            </form>\n        </div>\n    </div>\n    <div v-else>\n        <div class=\"redirect\">\n            <img src=\"../img/bored.svg\" width=\"50\" height=\"50\">\n            Bu sayfayı görüntülemek için giriş yapmanız gerekli! <button @click.prevent=\"redirected\" class=\"btn btn-primary\" >Login</button>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Task from './Task'\nexport default {\n    data() {\n        return {\n            message: '',\n            description: '',\n            tasks: [\n\n            ],\n            showAlert: false,\n            showTasks: false,\n        }\n    },\n    components: {\n        task: Task\n    },\n    methods: {\n        submitted: function() {\n            if (this.message != '') {\n                //this.tasks = this.tasks || [];\n                var newID = this.tasks.length + 1\n                this.tasks.push({\n                    id: newID,\n                    message: this.message,\n                    description: this.description,\n                    isDone: false\n                })\n                // console.log(this.tasks)\n                this.message = ''\n                this.description = ''\n                localStorage.setItem('tasks', JSON.stringify(this.tasks))\n                //this.tasks = localStorage.getItem('tasks')\n                this.showAlert = false\n            } else {\n                this.showAlert = true\n            }\n        },\n        redirected: function() {\n            this.$router.push('Login')\n        },\n        done: function(id) {\n            for (var i = 0; i < this.tasks.length; i++) {\n                if (id == this.tasks[i].id) {\n                    if (this.tasks[i].isDone == true) {\n                        this.tasks[i].isDone = false\n                    } else {\n                        this.tasks[i].isDone = true\n                    }\n                }\n            }\n            localStorage.setItem('tasks', JSON.stringify(this.tasks))\n        }\n    },\n\n    mounted() {\n        var localUser = localStorage.getItem('user')\n        if (localUser != null) {\n            this.showTasks = true\n        }\n        var localTasks = localStorage.getItem('tasks')\n        if (localTasks != null) {\n            this.tasks = JSON.parse(localTasks)\n        }\n    }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.container {\n    width: 100%;\n    max-width: 800px;\n    min-height: 100vh;\n}\nform {\n    margin-left: 17px;\n}\n.redirect {\n    /* margin: 0 auto; */\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 55%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%)\n}\n.btn {\n    display: block;\n    margin: auto;\n    margin-top: 15px;\n}\nimg {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n}\n</style>\n"]}]}