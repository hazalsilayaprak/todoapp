{"remainingRequest":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue","mtime":1562602203729},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Task from \"./Task\";\nexport default {\n  data: function data() {\n    return {\n      message: '',\n      description: '',\n      tasks: [],\n      showAlert: false,\n      showTasks: false,\n      showForm: false,\n      hasBorder: ''\n    };\n  },\n  components: {\n    task: Task\n  },\n  methods: {\n    submitted: function submitted() {\n      if (this.message != '') {\n        //this.tasks = this.tasks || [];\n        var newID = this.tasks.length + 1;\n        this.tasks.push({\n          id: newID,\n          message: this.message,\n          description: this.description,\n          isDone: false\n        }); // console.log(this.tasks)\n\n        this.message = '';\n        this.description = '';\n        localStorage.setItem('tasks', JSON.stringify(this.tasks)); //this.tasks = localStorage.getItem('tasks')\n\n        this.showAlert = false;\n      } else {\n        this.showAlert = true;\n        this.hasBorder = 'error-border';\n      }\n    },\n    removeBorder: function removeBorder() {\n      this.hasBorder = false;\n      this.showAlert = false;\n    },\n    redirected: function redirected() {\n      this.$router.push('Login');\n    },\n    done: function done(id) {\n      for (var i = 0; i < this.tasks.length; i++) {\n        if (id == this.tasks[i].id) {\n          if (this.tasks[i].isDone == true) {\n            this.tasks[i].isDone = false;\n          } else {\n            this.tasks[i].isDone = true;\n          }\n        }\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem('is_login') !== null) {\n      this.showTasks = true;\n    }\n\n    var localTasks = localStorage.getItem('tasks');\n\n    if (localTasks != null) {\n      this.tasks = JSON.parse(localTasks);\n    }\n  }\n};",{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,OAAA,IAAA;AACA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,WAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAMA,MAAA,SAAA,EAAA,KANA;AAOA,MAAA,SAAA,EAAA,KAPA;AAQA,MAAA,QAAA,EAAA,KARA;AASA,MAAA,SAAA,EAAA;AATA,KAAA;AAWA,GAbA;AAcA,EAAA,UAAA,EAAA;AACA,IAAA,IAAA,EAAA;AADA,GAdA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,qBAAA;AACA,UAAA,KAAA,OAAA,IAAA,EAAA,EAAA;AACA;AACA,YAAA,KAAA,GAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA;AACA,aAAA,KAAA,CAAA,IAAA,CAAA;AACA,UAAA,EAAA,EAAA,KADA;AAEA,UAAA,OAAA,EAAA,KAAA,OAFA;AAGA,UAAA,WAAA,EAAA,KAAA,WAHA;AAIA,UAAA,MAAA,EAAA;AAJA,SAAA,EAHA,CASA;;AACA,aAAA,OAAA,GAAA,EAAA;AACA,aAAA,WAAA,GAAA,EAAA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA,EAZA,CAaA;;AACA,aAAA,SAAA,GAAA,KAAA;AACA,OAfA,MAeA;AACA,aAAA,SAAA,GAAA,IAAA;AACA,aAAA,SAAA,GAAA,cAAA;AACA;AACA,KArBA;AAsBA,IAAA,YAAA,EAAA,wBAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,KAzBA;AA0BA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,OAAA;AACA,KA5BA;AA6BA,IAAA,IAAA,EAAA,cAAA,EAAA,EAAA;AACA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,EAAA,IAAA,KAAA,KAAA,CAAA,CAAA,EAAA,EAAA,EAAA;AACA,cAAA,KAAA,KAAA,CAAA,CAAA,EAAA,MAAA,IAAA,IAAA,EAAA;AACA,iBAAA,KAAA,CAAA,CAAA,EAAA,MAAA,GAAA,KAAA;AACA,WAFA,MAEA;AACA,iBAAA,KAAA,CAAA,CAAA,EAAA,MAAA,GAAA,IAAA;AACA;AACA;AACA;;AACA,MAAA,YAAA,CAAA,OAAA,CAAA,OAAA,EAAA,IAAA,CAAA,SAAA,CAAA,KAAA,KAAA,CAAA;AACA;AAxCA,GAjBA;AA2DA,EAAA,OA3DA,qBA2DA;AACA,QAAA,YAAA,CAAA,OAAA,CAAA,UAAA,MAAA,IAAA,EAAA;AACA,WAAA,SAAA,GAAA,IAAA;AACA;;AACA,QAAA,UAAA,GAAA,YAAA,CAAA,OAAA,CAAA,OAAA,CAAA;;AACA,QAAA,UAAA,IAAA,IAAA,EAAA;AACA,WAAA,KAAA,GAAA,IAAA,CAAA,KAAA,CAAA,UAAA,CAAA;AACA;AACA;AAnEA,CAAA","sourcesContent":["<template>\n<div class=\"container\">\n    <div v-if=\"showTasks\">\n        <h1>Tasks</h1>\n        <div class=\"row w-100\">\n            <div class=\"col\">\n                <h4>Today</h4>\n                <div v-for=\"task in tasks\">\n                    <div @click.prevent=\"done(task.id)\">\n                        <task :data=\"task\" />\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row w-100\">\n            <form action=\"/action_page.php\">\n                <button @click.prevent=\"showForm = true\" type=\"button\" class=\"btn btn-primary\" v-show=\"!showForm\">Add New Task</button>\n                <div class=\"form-group\" v-show=\"showForm\">\n                    <label for=\"todo\"><h4 class=\"mt-5\">Add A New Task</h4></label>\n                    <input type=\"text\" @focus=\"removeBorder\" class=\"form-control\" :class=\"hasBorder\" id=\"todo\" v-model=\"message\" placeholder=\"Task Title\">\n                    <div class=\"text text-danger\" role=\"alert\" v-if=\"showAlert\">\n                        Girdi boş olamaz!\n                    </div>\n                    <textarea class=\"form-control mt-3\" v-model=\"description\" placeholder=\"Task Description (Optional)\"></textarea>\n                    <div class=\"group\">\n                        <button type=\"button\" @click.prevent=\"showForm = false\" class=\"btn btn-outline-secondary\">Cancel</button>\n                        <button @click.prevent=\"submitted\" type=\"button\" class=\"btn btn-primary ml-3\">Done</button>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </div>\n    <div v-else>\n        <div class=\"redirect\">\n            <img src=\"../img/bored.svg\" width=\"50\" height=\"50\">\n            Bu sayfayı görüntülemek için giriş yapmanız gerekli! <button @click.prevent=\"redirected\" class=\"btn btn-primary\" >Login</button>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Task from './Task'\nexport default {\n    data() {\n        return {\n            message: '',\n            description: '',\n            tasks: [\n\n            ],\n            showAlert: false,\n            showTasks: false,\n            showForm: false,\n            hasBorder: '',\n        }\n    },\n    components: {\n        task: Task\n    },\n    methods: {\n        submitted: function() {\n            if (this.message != '') {\n                //this.tasks = this.tasks || [];\n                var newID = this.tasks.length + 1\n                this.tasks.push({\n                    id: newID,\n                    message: this.message,\n                    description: this.description,\n                    isDone: false\n                })\n                // console.log(this.tasks)\n                this.message = ''\n                this.description = ''\n                localStorage.setItem('tasks', JSON.stringify(this.tasks))\n                //this.tasks = localStorage.getItem('tasks')\n                this.showAlert = false\n            } else {\n                this.showAlert = true\n                this.hasBorder = 'error-border'\n            }\n        },\n        removeBorder: function () {\n            this.hasBorder = false\n            this.showAlert = false\n        },\n        redirected: function() {\n            this.$router.push('Login')\n        },\n        done: function(id) {\n            for (var i = 0; i < this.tasks.length; i++) {\n                if (id == this.tasks[i].id) {\n                    if (this.tasks[i].isDone == true) {\n                        this.tasks[i].isDone = false\n                    } else {\n                        this.tasks[i].isDone = true\n                    }\n                }\n            }\n            localStorage.setItem('tasks', JSON.stringify(this.tasks))\n        }\n    },\n    mounted() {\n        if (localStorage.getItem('is_login') !== null) {\n            this.showTasks = true\n        }\n        var localTasks = localStorage.getItem('tasks')\n        if (localTasks != null) {\n            this.tasks = JSON.parse(localTasks)\n        }\n    },\n\n}\n</script>\n\n<style lang=\"css\" scoped>\n.container {\n    width: 100%;\n    max-width: 800px;\n    min-height: 100vh;\n}\nform {\n    margin-left: 17px;\n    width: 100%;\n}\n.redirect {\n    /* margin: 0 auto; */\n    text-align: center;\n    position: absolute;\n    top: 50%;\n    left: 55%;\n    margin-right: -50%;\n    transform: translate(-50%, -50%)\n}\n.group {\n    display: flex;\n    justify-content: flex-end;\n}\n.btn {\n    display: block;\n    margin-top: 15px;\n}\n.error-border{\n    border: solid 1px red;\n}\nimg {\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    margin-bottom: 30px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}