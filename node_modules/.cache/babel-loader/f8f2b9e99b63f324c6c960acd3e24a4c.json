{"remainingRequest":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hazalsilayaprak/Projects/to-do-app/src/components/Tasks.vue","mtime":1565269216875},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Task from \"./Task\";\nexport default {\n  data: function data() {\n    return {\n      message: '',\n      description: '',\n      tasks: [],\n      showAlert: false,\n      showTasks: false,\n      showForm: false,\n      showUpdateButton: false,\n      hasBorder: '',\n      taskForEdit: null\n    };\n  },\n  components: {\n    task: Task\n  },\n  methods: {\n    submitted: function submitted() {\n      if (this.message != '') {\n        //this.tasks = this.tasks || [];\n        if (this.showUpdateButton) {\n          for (var i = 0; i < this.tasks.length; i++) {\n            if (this.tasks[i].id === this.taskForEdit.id) {\n              var index = this.tasks.indexOf(this.taskForEdit);\n              this.tasks[index].message = this.message;\n              this.tasks[index].description = this.description;\n            }\n          }\n\n          localStorage.setItem('tasks', JSON.stringify(this.tasks));\n        } else {\n          var newID = this.tasks.length + 1;\n          this.tasks.push({\n            id: newID,\n            message: this.message,\n            description: this.description,\n            isDone: false\n          }); // console.log(this.tasks)\n\n          this.message = '';\n          this.description = '';\n          localStorage.setItem('tasks', JSON.stringify(this.tasks)); //this.tasks = localStorage.getItem('tasks')\n\n          this.showAlert = false;\n        }\n\n        this.message = '';\n        this.description = '';\n      } else {\n        this.showAlert = true;\n        this.hasBorder = 'error-border';\n      }\n    },\n    removeBorder: function removeBorder() {\n      this.hasBorder = false;\n      this.showAlert = false;\n    },\n    redirected: function redirected() {\n      this.$router.push('Login');\n    },\n    done: function done(id) {\n      for (var i = 0; i < this.tasks.length; i++) {\n        if (id == this.tasks[i].id) {\n          if (this.tasks[i].isDone == true) {\n            this.tasks[i].isDone = false;\n          } else {\n            this.tasks[i].isDone = true;\n          }\n        }\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    removeTask: function removeTask(task) {\n      for (var i = 0; i < this.tasks.length; i++) {\n        if (this.tasks[i].id === task.id) {\n          var index = this.tasks.indexOf(task);\n          this.tasks.splice(index, 1);\n        }\n      }\n\n      localStorage.setItem('tasks', JSON.stringify(this.tasks));\n    },\n    editTask: function editTask(task) {\n      this.showForm = true;\n      this.showUpdateButton = true;\n      this.taskForEdit = task;\n      this.message = task.message;\n      this.description = task.description;\n    }\n  },\n  mounted: function mounted() {\n    if (localStorage.getItem('is_login') !== null) {\n      this.showTasks = true;\n    }\n\n    var localTasks = localStorage.getItem('tasks');\n\n    if (localTasks != null) {\n      this.tasks = JSON.parse(localTasks);\n    }\n  }\n};",{"version":3,"sources":["Tasks.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"container\">\n    <div class=\"mt-5\" v-if=\"showTasks\">\n        <h1>Tasks</h1>\n        <div class=\"row w-100\">\n            <div class=\"col\">\n                <h4>Today</h4>\n                <div v-for=\"task in tasks\" :key=\"task.id\">\n                    <task :data=\"task\" @removeTask=\"removeTask\" @doneTask=\"done\" @editTask=\"editTask\" />\n                </div>\n            </div>\n        </div>\n        <div class=\"row w-100\">\n            <form action=\"/action_page.php\" @submit.prevent=\"submitted\">\n                <button @click.prevent=\"showForm = true\" type=\"button\" class=\"btn btn-secondary\" v-show=\"!showForm\">Add New Task</button>\n                <div class=\"form-group\" v-show=\"showForm\">\n                    <label for=\"todo\">\n                        <h4 class=\"mt-5\">Add A New Task</h4>\n                    </label>\n                    <input type=\"text\" @focus=\"removeBorder\" class=\"form-control\" :class=\"hasBorder\" id=\"todo\" v-model=\"message\" placeholder=\"Task Title\">\n                    <textarea type=\"text\" class=\"form-control\" id=\"todo\" v-model=\"description\" placeholder=\"Task Description\"></textarea>\n                    <div class=\"text text-danger\" role=\"alert\" v-if=\"showAlert\">\n                        Girdi boş olamaz!\n                    </div>\n                    <div class=\"group\">\n                        <button type=\"button\" @click.prevent=\"showForm = false\" class=\"btn btn-outline-secondary\">Cancel</button>\n                        <button type=\"submit\" class=\"btn btn-primary ml-3\" v-if=\"!showUpdateButton\">Done</button>\n                        <button type=\"submit\" class=\"btn btn-success ml-3\" v-else>Update</button>\n                    </div>\n                </div>\n\n            </form>\n        </div>\n    </div>\n    <div v-else>\n        <div class=\"redirect\">\n            <img src=\"../img/bored.svg\" width=\"50\" height=\"50\">\n            Bu sayfayı görüntülemek için giriş yapmanız gerekli!\n            <router-link to=\"/login\" tag=\"button\" class=\"btn btn-primary\"><a class=\"text-white\">Login</a></router-link>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nimport Task from './Task'\nexport default {\n    data() {\n        return {\n            message: '',\n            description: '',\n            tasks: [\n\n            ],\n            showAlert: false,\n            showTasks: false,\n            showForm: false,\n            showUpdateButton: false,\n            hasBorder: '',\n            taskForEdit: null,\n        }\n    },\n    components: {\n        task: Task\n    },\n    methods: {\n        submitted: function() {\n            if (this.message != '') {\n                //this.tasks = this.tasks || [];\n\n                if (this.showUpdateButton) {\n                    for (var i = 0; i < this.tasks.length; i++) {\n                        if (this.tasks[i].id === this.taskForEdit.id) {\n                            const index = this.tasks.indexOf(this.taskForEdit);\n                            this.tasks[index].message = this.message\n                            this.tasks[index].description = this.description\n                        }\n                    }\n                    localStorage.setItem('tasks', JSON.stringify(this.tasks))\n                }\n                else {\n                    var newID = this.tasks.length + 1\n                    this.tasks.push({\n                        id: newID,\n                        message: this.message,\n                        description: this.description,\n                        isDone: false\n                    })\n                    // console.log(this.tasks)\n                    this.message = ''\n                    this.description = ''\n                    localStorage.setItem('tasks', JSON.stringify(this.tasks))\n                    //this.tasks = localStorage.getItem('tasks')\n                    this.showAlert = false\n                }\n                this.message = ''\n                this.description = ''\n\n            } else {\n                this.showAlert = true\n                this.hasBorder = 'error-border'\n            }\n        },\n        removeBorder: function() {\n            this.hasBorder = false\n            this.showAlert = false\n        },\n        redirected: function() {\n            this.$router.push('Login')\n        },\n        done: function(id) {\n            for (var i = 0; i < this.tasks.length; i++) {\n                if (id == this.tasks[i].id) {\n                    if (this.tasks[i].isDone == true) {\n                        this.tasks[i].isDone = false\n                    } else {\n                        this.tasks[i].isDone = true\n                    }\n                }\n            }\n            localStorage.setItem('tasks', JSON.stringify(this.tasks))\n        },\n        removeTask: function(task) {\n            for (var i = 0; i < this.tasks.length; i++) {\n                if (this.tasks[i].id === task.id) {\n                    const index = this.tasks.indexOf(task);\n                    this.tasks.splice(index, 1);\n                }\n            }\n            localStorage.setItem('tasks', JSON.stringify(this.tasks))\n        },\n        editTask: function(task) {\n            this.showForm = true\n            this.showUpdateButton = true\n            this.taskForEdit = task\n            this.message = task.message\n            this.description = task.description\n        },\n    },\n    mounted() {\n        if (localStorage.getItem('is_login') !== null) {\n            this.showTasks = true\n        }\n        var localTasks = localStorage.getItem('tasks')\n        if (localTasks != null) {\n            this.tasks = JSON.parse(localTasks)\n        }\n    },\n}\n</script>\n\n<style lang=\"css\" scoped>\n    .container {\n        width: 100%;\n        max-width: 800px;\n        min-height: 100vh;\n    }\n    form {\n        margin-left: 17px;\n        width: 100%;\n    }\n    .redirect {\n\n        text-align: center;\n        position: absolute;\n        top: 50%;\n        left: 55%;\n        margin-right: -50%;\n        transform: translate(-50%, -50%)\n    }\n    .group {\n        display: flex;\n        justify-content: flex-end;\n    }\n    .btn {\n        display: block;\n        margin-top: 15px;\n        margin-left: 155px;\n    }\n    img {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: 30px;\n    }\n\n@media screen (max-width:400px) {\n    .container {\n        width: 100%;\n        max-width: 235px;\n        min-height: 100vh;\n    }\n    form {\n        margin-left: 10px;\n        width: 100%;\n    }\n    .redirect {\n\n        text-align: center;\n        position: absolute;\n        top: 50%;\n        left: 55%;\n        margin-right: -50%;\n        transform: translate(-50%, -50%)\n    }\n    .group {\n        display: flex;\n        justify-content: flex-end;\n    }\n    .btn {\n        display: block;\n        margin-top: 9px;\n        margin-left: 93px;\n    }\n    img {\n        display: block;\n        margin-left: auto;\n        margin-right: auto;\n        margin-bottom: 18px;\n    }\n}\n.error-border{\n    border: solid 1px red;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}