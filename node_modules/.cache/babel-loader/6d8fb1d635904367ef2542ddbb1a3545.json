{"remainingRequest":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hazalsilayaprak/Projects/to-do-app/src/components/Task.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/hazalsilayaprak/Projects/to-do-app/src/components/Task.vue","mtime":1563808671764},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hazalsilayaprak/Projects/to-do-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: ['data'],\n  data: function data() {\n    return {\n      task: this.data\n    };\n  },\n  methods: {\n    deleteTask: function deleteTask() {\n      this.$emit('removeTask', this.task);\n    },\n    doneTask: function doneTask() {\n      this.$emit('doneTask', this.task.id);\n    }\n  }\n};",{"version":3,"sources":["Task.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuBA,eAAA;AACA,EAAA,KAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,KAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,UAAA,EAAA,sBAAA;AACA,WAAA,KAAA,CAAA,YAAA,EAAA,KAAA,IAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,WAAA,KAAA,CAAA,UAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AACA;AANA;AAPA,CAAA","sourcesContent":["<template>\n<div class=\"card\">\n    <div class=\"card-body\">\n        <div style=\"display: flex;\">\n            <label :for=\"'checkbox-'+task.id\" @click.prevent=\"doneTask\">\n                <div class=\"box\" :class=\"task.isDone ? 'box-checked' : '' \"></div>\n            </label>\n            <input type=\"checkbox\" class=\"form-check-input\" :id=\"'checkbox-'+task.id\" value=\"\" v-if=\"task.isDone\" checked>\n            <!-- <input type=\"checkbox\" class=\"form-check-input\" :id=\"'checkbox-'+task.id\" value=\"\" v-else> -->\n            <div class=\"task-message\">\n                <p v-if=\"task.isDone\"><del>{{ task.message }}</del></p>\n                <p v-else>{{ task.message }}</p>\n                <span class=\"description\">{{ task.description }}</span>\n            </div>\n        </div>\n        <div class=\"img-div\">\n            <a @click.prevent=\"deleteTask\"><img src=\"../img/delete.svg\"></a>\n        </div>\n    </div>\n</div>\n</template>\n\n<script>\nexport default {\n    props: ['data'],\n    data() {\n        return {\n            task: this.data\n        }\n    },\n    methods: {\n        deleteTask: function () {\n            this.$emit('removeTask', this.task)\n        },\n        doneTask() {\n            this.$emit('doneTask', this.task.id)\n        }\n    }\n}\n</script>\n\n<style lang=\"css\" scoped>\n.description {\n    color: #aaa;\n}\n.card-body {\n    width: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n}\n.form-check-input {\n    display: none;\n}\n.box {\n    width: 20px;\n    height: 20px;\n    background: white;\n    border: 1px solid #b03225;\n    border-radius: 100%;\n    margin-right: 10px;\n}\n.box-checked{\n    background: #c0392b url(\"../img/checked.svg\") no-repeat;\n    background-size:12px;\n    background-position: center;\n}\n.task-message p {\n    margin-bottom: 0;\n}\nimg {\n    width: 24px;\n    height: 24px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}